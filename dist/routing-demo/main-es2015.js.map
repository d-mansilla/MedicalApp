{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/forgetpassword/forgetpassword.component.ts","./src/app/forgetpassword/forgetpassword.component.html","./src/app/services/CourseService.ts","./src/app/details/details.component.ts","./src/app/details/details.component.html","./src/environments/environment.ts","./src/app/model/signinData.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/services/user.service.client.ts","./src/app/services/authentication/authentication.service.ts","./src/app/security/authguard-service.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/security/authentication.guard.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserService} from '../services/user.service.client';\nimport {FormControl, FormGroup, NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  isFormInvalid = false;\n  errorActive = ' ';\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(signInForm: NgForm){\n    if (!signInForm.valid){\n      this.isFormInvalid = true;\n      this.errorActive = 'active';\n      return;\n    }\n    this.router.navigate(['/login']);\n  }\n\n}\n","<div class=\"login-wrapper\">\n\n  <form class=\"login\"(ngSubmit)=\"onSubmit(signInForm)\" #signInForm =\"ngForm\">\n\n    <section class=\"title\">\n      <h3 class=\"welcome\">Welcome to</h3>\n      <clr-icon size=\"26\" shape=\"dna\"></clr-icon>\n      Medical Info\n    </section>\n    <div class=\"login-group\">\n\n      <clr-input-container>\n        <label class=\"clr-sr-only\">Full Name</label>\n        <input type=\"text\" name=\"fname\" clrInput placeholder=\"Full Name\" required ngModel/>\n      </clr-input-container>\n\n      <clr-input-container>\n        <label class=\"clr-sr-only\">Username</label>\n        <input type=\"text\" name=\"username\" clrInput placeholder=\"Username\" required ngModel/>\n      </clr-input-container>\n\n      <clr-password-container>\n        <label class=\"clr-sr-only\">Password</label>\n        <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" required ngModel/>\n      </clr-password-container>\n\n      <clr-password-container>\n        <label class=\"clr-sr-only\">Confirm Password</label>\n        <input type=\"password\" name=\"conpassword\" clrPassword placeholder=\"Confirm Password\" required ngModel/>\n      </clr-password-container>\n\n      <clr-input-container>\n        <label class=\"clr-sr-only\">Email</label>\n        <input type=\"email\" name=\"email\" clrInput placeholder=\"Email\" required ngModel/>\n      </clr-input-container>\n\n      <div class=\"error {{errorActive}} \" *ngIf=\"isFormInvalid\">\n        Please fill in the requirements\n      </div>\n\n      <button class=\"btn btn-primary\" type = \"submit\">Create</button>\n<!--      <a href=\"javascript:void(0);\" routerLink = \"/login\" clrDropdownItem>Logout</a>-->\n\n      <a href=\"javascript://\" class=\"signup\" routerLink =\"/login\">Already have account? Back to login</a>\n\n      <a href=\"javascript://\" class=\"signup\" routerLink =\"/forgotpassword\">Forgot Password? Click Here</a>\n\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-forgetpassword',\n  templateUrl: './forgetpassword.component.html',\n  styleUrls: ['./forgetpassword.component.css']\n})\nexport class ForgetpasswordComponent implements OnInit {\n\n  isFormInvalid = false;\n  errorActive = ' ';\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(signInForm: NgForm){\n    if (!signInForm.valid){\n      this.isFormInvalid = true;\n      this.errorActive = 'active';\n      return;\n    }\n    this.router.navigate(['/login']);\n  }\n\n}\n","<div class=\"login-wrapper\">\n\n    <form class=\"login\" (ngSubmit)=\"onSubmit(signInForm)\" #signInForm =\"ngForm\">\n\n        <section class=\"title\">\n            <h3 class=\"welcome\">Welcome to</h3>\n            <clr-icon size=\"26\" shape=\"dna\"></clr-icon>\n            Medical Info\n        </section>\n        <div class=\"login-group\">\n\n            <clr-input-container>\n                <label class=\"clr-sr-only\">Email</label>\n                <input type=\"email\" name=\"email\" clrInput placeholder=\"Email\" required ngModel/>\n            </clr-input-container>\n\n            <div class=\"error {{errorActive}} \" *ngIf=\"isFormInvalid\">\n                Please fill in the requirements\n            </div>\n\n            <button class=\"btn btn-primary\" type=\"submit\">Reset</button>\n            <!--      <a href=\"javascript:void(0);\" routerLink = \"/login\" clrDropdownItem>Logout</a>-->\n\n            <a href=\"javascript://\" class=\"signup\" routerLink =\"/login\">Back to Login</a>\n\n            <a href=\"javascript://\" class=\"signup\" routerLink =\"/register\">No Account, No problem Click Here</a>\n\n        </div>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CourseService {\n  // findAllPatients = () => fetch('http://localhost:8080/api/patients').then(response => response.json());\n  // tslint:disable-next-line:max-line-length\n  findAllPatients = () => fetch('http://patientbackend-env.eba-epmwqesg.us-east-2.elasticbeanstalk.com/api/patients').then(response => response.json());\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>details works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class SigninData {\n private username: string;\n private password: string;\n\n constructor(username: string, password: string) {\n     this.username = username;\n     this.password = password;\n\n }\n\n getUsername(): string{\n     return this.username;\n }\n\n getPassword(): string{\n     return this.password;\n }\n}\n","import { Component } from '@angular/core';\nimport {AuthenticationService} from './services/authentication/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'routing-demo';\n\n  constructor(public authenticationService: AuthenticationService) {\n  }\n\n  logout(){\n    this.authenticationService.logout();\n  }\n}\n","\n<router-outlet></router-outlet>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  // constructor(private activatedRoute: ActivatedRoute) { }\n\n  // ngOnInit(): void {\n  //   this.activatedRoute\n  //   .params\n  //   .subscribe(params =>\n  //   this.userId = params['userId']);\n\n  constructor(private activatedRoute: ActivatedRoute, private userService: UserService, private router: Router) { }\n  userId: Number;\n  userName: String;\n  password: String;\n  userObject: Object;\n\n\n    ngOnInit(): void {\n    this.activatedRoute\n    .params\n    .subscribe(params =>\n    this.userId = params['userId']);\n\n    const user = this.userService.findUserById(this.userId);\n    this.userName = user.username;\n    this.userId = user._id;\n    this.password = user.password;\n\n\n\n\n\n  }\n\n\n\n\n\n\n\n\n\n\n}\n\n\n\n\n","<!-- <h1>Profile for Student {{userId}}</h1> -->\n<h1>Profile for {{userName}}</h1>\n\n<div style=\"margin: 5%\">\n\n    <div class=\"col\">\n      <ul class=\"list-group\">\n        <li>\n          name: {{userName}}\n\n        </li>\n      </ul>\n    </div>\n    <div class=\"col\">\n      <ul class=\"list-group\">\n        <li>\n          password: {{password}}\n\n        </li>\n      </ul>\n    </div>\n    <div class=\"col\">\n      <ul class=\"list-group\">\n        <li>\n          ID: {{userId}}\n\n        </li>\n      </ul>\n    </div>\n  </div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterComponent } from './register/register.component';\nimport { routing } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from './services/user.service.client';\nimport { CourseService } from './services/CourseService';\n\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainComponent } from './main/main.component';\nimport {AuthguardServiceService} from \"./security/authguard-service.service\";\nimport { DetailsComponent } from './details/details.component';\nimport { ForgetpasswordComponent } from './forgetpassword/forgetpassword.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    MainComponent,\n    DetailsComponent,\n    ForgetpasswordComponent\n  ],\n  imports: [\n    routing,\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n  UserService,\n  CourseService,\n    AuthguardServiceService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class UserService {\nusers = [\n  { _id: 123, username:'bob', password: 'bobpassword'},\n  { _id: 456, username:'mike', password: 'mikepassword'}\n  ];\n  \n  findUserByCredentials(username: String, password: String){\n  for (let i = 0; i < this.users.length; i++) {\n  const  user = this.users[i];\n  if(username == user.username && password == user.password)\n  {\n  return user;\n  }\n\n  }\n  return null;\n  }\n\n  findUserById(_id: Number){\n    for (let i = 0; i < this.users.length; i++) {\n    const  user = this.users[i];\n    if(_id == user._id)\n    {\n    return user;\n    }\n  \n    }\n    return null;\n    }\n\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {SigninData} from '../../model/signinData';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private readonly mocKedUser = new SigninData('panit', 'panitpassword');\n  isAuthenticated = false;\n\n  constructor(private router: Router) { }\n\n  authenticate(signinData: SigninData): boolean{\n  if (this.checkCredentials(signinData)){\n    this.isAuthenticated = true;\n    this.router.navigate(['/main']);\n    return true;\n  }\n  this.isAuthenticated = false;\n  return false;\n  }\n  private checkCredentials(signinData: SigninData): boolean{\n    return this.checkUsername(signinData.getUsername()) && this.checkPassword(signinData.getPassword());\n  }\n\n  private checkUsername(username: string): boolean{\n    return username === this.mocKedUser.getUsername();\n  }\n  private checkPassword(password: string): boolean{\n    return password === this.mocKedUser.getPassword();\n  }\n\n  logout(){\n    this.isAuthenticated = false;\n    this.router.navigate([' ']);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardServiceService {\n\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {MainComponent} from \"./main/main.component\";\nimport {AuthguardServiceService} from \"./security/authguard-service.service\";\nimport {AuthenticationGuard} from \"./security/authentication.guard\";\nimport {ForgetpasswordComponent} from './forgetpassword/forgetpassword.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'main', component: MainComponent, canActivate: [AuthenticationGuard]},\n  { path: 'profile/:userId', component: ProfileComponent},\n  { path: ' ', component: LoginComponent},\n  { path: 'forgotpassword', component: ForgetpasswordComponent},\n  { path: '**', redirectTo: ' '}\n];\n\nexport const routing = RouterModule.forRoot(routes);\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service.client';\nimport {NgForm} from '@angular/forms';\nimport {AuthenticationService} from '../services/authentication/authentication.service';\nimport {SigninData} from '../model/signinData';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  //class variables\n  // username: string;\n  // password: string;\n  errorActive = ' ';\n  isFormInvalid = false;\n  areCredentialsInvalid = false;\n\n  constructor(private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n  }\n\n  // tslint:disable-next-line:typedef\n  onSubmit(signInForm: NgForm){\n  if (!signInForm.valid){\n    this.isFormInvalid = true;\n    this.areCredentialsInvalid = false;\n    this.errorActive = 'active';\n    return;\n  }\n  this.checkCredentials(signInForm);\n  // console.log(signInForm.value);\n  }\n  // tslint:disable-next-line:typedef\n  private checkCredentials(signInForm: NgForm){\n    const signinData = new SigninData(signInForm.value.username, signInForm.value.password);\n    if (!this.authenticationService.authenticate(signinData)){\n      this.isFormInvalid = false;\n      this.areCredentialsInvalid = true;\n      this.errorActive = 'active';\n    }\n  }\n  // login(username, password) {\n  //   console.log(username, password);\n  //   const user = this.userService.findUserByCredentials(username, password);\n  //   if(user != null)\n  //   {\n  //     this.router.navigate( ['main', user._id]);\n  //   }\n  //   else\n  //   {\n  //     this.errorMessage='Username or Password Incorrect';\n  //     this.errorActive='active';\n  //   }\n  // }\n\n\n}\n\n\n\n\n","<!--<h1>Login</h1>-->\n\n<!--Username-->\n<!--<input [(ngModel)]=\"username\"> {{username}}-->\n<!--<br/>-->\n<!--Password-->\n<!--<input [(ngModel)]=\"password\"> {{password}}-->\n<!--<br/>-->\n<!--<button (click)=\"login(username, password)\">Login</button>-->\n\n\n\n<!--<a routerLink = \"/register\">-->\n<!--  Register</a>-->\n\n<!--<a routerLink = \"/profile\">-->\n<!--  Profile</a>-->\n\n<!--<a routerLink=\"/course\">-->\n<!--  Courses</a>-->\n\n<div class=\"login-wrapper\">\n  <form class=\"login\" (ngSubmit)=\"onSubmit(signInForm)\" #signInForm =\"ngForm\">\n    <section class=\"title\">\n      <h3 class=\"welcome\">Welcome to</h3>\n      <clr-icon size=\"26\" shape=\"dna\"></clr-icon>\n      Medical Info\n<!--      <h5 class=\"hint\">Use your Company ID to sign in or create one now</h5>-->\n    </section>\n    <div class=\"login-group\">\n\n      <clr-input-container>\n        <label class=\"clr-sr-only\">Username</label>\n        <input type=\"text\" id=\"inputUsername\" name=\"username\" clrInput placeholder=\"Username\" required autofocus ngModel/>\n      </clr-input-container>\n\n      <clr-password-container>\n        <label class=\"clr-sr-only\">Password</label>\n        <input type=\"password\" id=\"inputPassword\" name=\"password\" clrPassword placeholder=\"Password\" required ngModel/>\n      </clr-password-container>\n\n      <clr-checkbox-wrapper>\n        <label>Remember me</label>\n        <input type=\"checkbox\" name=\"rememberMe\" clrCheckbox />\n      </clr-checkbox-wrapper>\n\n<!--      <div class=\"error {{errorActive}}\" >-->\n<!--        {{errorMessage}}-->\n<!--      </div>-->\n      <div class=\"error {{errorActive}} \" *ngIf=\"isFormInvalid\">\n        Please fill in the requirements\n      </div>\n      <div class=\"error {{errorActive}}\" *ngIf=\"areCredentialsInvalid\" >\n        Username or Password Incorrect\n      </div>\n\n      <button class=\"btn btn-primary\" type=\"submit\">Login</button>\n<!--      (click)=\"login(username, password)\"-->\n      <a href=\"javascript://\" class=\"signup\" routerLink =\"/register\">No Account, No problem Click Here</a>\n\n      <a href=\"javascript://\" class=\"signup\" routerLink =\"/forgotpassword\">Forgot Password? Click Here</a>\n\n\n\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {CourseService} from '../services/CourseService';\nimport {AuthenticationService} from '../services/authentication/authentication.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  private routerLink: any;\n\n\n  constructor(private courseService: CourseService, public authenticationService: AuthenticationService) { }\n\n  // patients: [];\n  // selectedPatient = {\n  //   // modules: []\n  // };\n\n  patients: [];\n  selectedPatient = {\n    modules: []\n  };\n\n  ngOnInit(): void {\n    this.courseService.findAllPatients().then(patients => this.patients = patients);\n  }\n\n  // tslint:disable-next-line:typedef\n  selectPatient(patient: never) {\n    this.selectedPatient = patient;\n\n  }\n\n  logout(){\n    this.authenticationService.logout();\n  }\n\n}\n","<div class=\"main-container\">\n  <header class=\"header header-6\">\n    <div class=\"branding\">\n      <a class=\"nav-link\">\n        <clr-icon size=\"30\" shape=\"dna\"></clr-icon>\n        <span class=\"title\">Medical Info</span>\n      </a>\n    </div>\n\n    <div class=\"header-actions\">\n      <clr-dropdown>\n        <clr-icon shape=\"user\"></clr-icon>\n        <button class=\"nav-icon\" clrDropdownTrigger>\n        </button>\n        <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n\n          <a href=\"javascript:void(0);\" (click)=\"logout()\" clrDropdownItem>Logout</a>\n\n<!--          <a href=\"javascript:void(0);\" (click)=\"logout()\" clrDropdownItem>Log out</a>-->\n        </clr-dropdown-menu>\n      </clr-dropdown>    <!--adding it here -->\n    </div>\n\n  </header>\n\n  <div class=\"content-container\">\n    <div class=\"content-area\">\n\n      <div class=\"clr-row\">\n\n        <div class=\"clr-col\">\n\n          <div *ngFor=\"let patient of patients\" class=\"card\">\n\n            <ul class=\"list-group\">\n\n              <li class=\"list-group-item\">\n                Patient Name: {{patient.name}}\n              </li>\n                <li class=\"list-group-item\">\n                    Patient Name: {{patient.gender}}\n                </li>\n                <li class=\"list-group-item\">\n                    Patient Name: {{patient.age}}\n                </li>\n                <li class=\"list-group-item\">\n                    Patient Name: {{patient.height}}\n                </li>\n                <li class=\"list-group-item\">\n                    Patient Name: {{patient.weight}}\n                </li>\n                <li class=\"list-group-item\">\n                    Patient Name: {{patient.allergy}}\n                </li>\n                <li class=\"list-group-item\">\n                    Patient Name: {{patient.cond}}\n                </li>\n                <li class=\"list-group-item\">\n                    <clr-accordion>\n                        <clr-accordion-panel>\n                            <clr-accordion-title>Details</clr-accordion-title>\n                            <clr-accordion-content *clrIfExpanded>\n                                <!--                    <p>Details about patient that cannot be categorized....</p>-->\n\n                                <form class=\"clr-form\">\n                                    <div class=\"clr-form-control\">\n                                        <label for=\"vertical-textarea-basic\" class=\"clr-control-label\">Patient details</label>\n                                        <div class=\"clr-control-container\">\n                                            <div class=\"clr-textarea-wrapper\">\n                            <textarea rows=\"10\" cols=\"100\" id=\"vertical-textarea-basic\" placeholder=\"Details about patient that cannot be categorized.... \" class=\"clr-textarea\">\n\n                            {{patient.details}}\n\n                            </textarea>\n                                                <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                                            </div>\n                                            <span class=\"clr-subtext\">Helper Text</span>\n                                        </div>\n                                    </div>\n                                </form>\n\n                            </clr-accordion-content>\n                        </clr-accordion-panel>\n\n                    </clr-accordion>\n                </li>\n            </ul>\n\n            <button class=\"btn btn-warning\">Delete</button>\n            <button class=\"btn btn-primary\">Edit</button>\n            <button class=\"btn btn-success\">Save</button>\n<!--            </div>-->\n          </div>\n\n        </div>\n<!--        <div class=\"clr-col\">-->\n<!--          <span>1/5</span>-->\n<!-- TOD0 if we need more add it like the div above-->\n      </div>\n    </div>\n    <button class=\"btn btn-success\">Add Card</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthenticationService} from '../services/authentication/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private authenticationService: AuthenticationService, private router: Router) {\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authenticationService.isAuthenticated){\n      return true;\n    }\n    this.router.navigate([' ']);\n    return false;\n  }\n\n}\n\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}